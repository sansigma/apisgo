// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssigmaapi/flnd/v1/flnd.proto

package flnd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VitessMessage struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VitessMessage) Reset()         { *m = VitessMessage{} }
func (m *VitessMessage) String() string { return proto.CompactTextString(m) }
func (*VitessMessage) ProtoMessage()    {}
func (*VitessMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_30a62ba48e77c54d, []int{0}
}

func (m *VitessMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VitessMessage.Unmarshal(m, b)
}
func (m *VitessMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VitessMessage.Marshal(b, m, deterministic)
}
func (m *VitessMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VitessMessage.Merge(m, src)
}
func (m *VitessMessage) XXX_Size() int {
	return xxx_messageInfo_VitessMessage.Size(m)
}
func (m *VitessMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VitessMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VitessMessage proto.InternalMessageInfo

func (m *VitessMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*VitessMessage)(nil), "ssigmaapi.flnd.v1.VitessMessage")
}

func init() { proto.RegisterFile("ssigmaapi/flnd/v1/flnd.proto", fileDescriptor_30a62ba48e77c54d) }

var fileDescriptor_30a62ba48e77c54d = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x2e, 0xce, 0x4c,
	0xcf, 0x4d, 0x4c, 0x2c, 0xc8, 0xd4, 0x4f, 0xcb, 0xc9, 0x4b, 0xd1, 0x2f, 0x33, 0x04, 0xd3, 0x7a,
	0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x82, 0x70, 0x59, 0x3d, 0xb0, 0x68, 0x99, 0xa1, 0x94, 0x74,
	0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x58, 0x41, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41,
	0x49, 0x25, 0x44, 0xbd, 0x92, 0x32, 0x17, 0x6f, 0x58, 0x66, 0x49, 0x6a, 0x71, 0xb1, 0x6f, 0x6a,
	0x71, 0x71, 0x62, 0x7a, 0xaa, 0x90, 0x10, 0x17, 0x4b, 0x49, 0x6a, 0x45, 0x89, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x98, 0x6d, 0x74, 0x88, 0x89, 0x8b, 0x1f, 0xa2, 0x2a, 0x38, 0xb5, 0xa8,
	0x2c, 0x33, 0x39, 0x35, 0xcc, 0x50, 0xc8, 0x83, 0x8b, 0xcb, 0x3d, 0xb5, 0x04, 0xa6, 0x4b, 0x4c,
	0x0f, 0x62, 0x89, 0x1e, 0xcc, 0x12, 0x3d, 0x57, 0x90, 0x25, 0x52, 0x0a, 0x7a, 0x18, 0xee, 0xd1,
	0x43, 0xb1, 0x4f, 0x89, 0x41, 0xc8, 0x9b, 0x8b, 0xd7, 0xb9, 0x28, 0x35, 0xb1, 0x24, 0x15, 0x66,
	0x18, 0x41, 0x4d, 0x52, 0x38, 0xac, 0x83, 0x18, 0x16, 0x5a, 0x90, 0x42, 0x3d, 0xc3, 0x5c, 0x52,
	0x73, 0x52, 0xa9, 0x62, 0x98, 0x93, 0x5e, 0x94, 0x4e, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e,
	0x72, 0x7e, 0xae, 0x7e, 0x71, 0x62, 0x1e, 0xd8, 0x24, 0x7d, 0xb8, 0x81, 0xe9, 0xf9, 0xb0, 0xf8,
	0xb4, 0x06, 0xd1, 0x49, 0x6c, 0x60, 0x13, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xed,
	0x65, 0x18, 0xf0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VitessServiceV1Client is the client API for VitessServiceV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VitessServiceV1Client interface {
	GetMessage(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VitessMessage, error)
	CreateMessage(ctx context.Context, in *VitessMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateMessage(ctx context.Context, in *VitessMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteMessage(ctx context.Context, in *VitessMessage, opts ...grpc.CallOption) (*empty.Empty, error)
}

type vitessServiceV1Client struct {
	cc *grpc.ClientConn
}

func NewVitessServiceV1Client(cc *grpc.ClientConn) VitessServiceV1Client {
	return &vitessServiceV1Client{cc}
}

func (c *vitessServiceV1Client) GetMessage(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VitessMessage, error) {
	out := new(VitessMessage)
	err := c.cc.Invoke(ctx, "/ssigmaapi.flnd.v1.VitessServiceV1/GetMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vitessServiceV1Client) CreateMessage(ctx context.Context, in *VitessMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ssigmaapi.flnd.v1.VitessServiceV1/CreateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vitessServiceV1Client) UpdateMessage(ctx context.Context, in *VitessMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ssigmaapi.flnd.v1.VitessServiceV1/UpdateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vitessServiceV1Client) DeleteMessage(ctx context.Context, in *VitessMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ssigmaapi.flnd.v1.VitessServiceV1/DeleteMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VitessServiceV1Server is the server API for VitessServiceV1 service.
type VitessServiceV1Server interface {
	GetMessage(context.Context, *empty.Empty) (*VitessMessage, error)
	CreateMessage(context.Context, *VitessMessage) (*empty.Empty, error)
	UpdateMessage(context.Context, *VitessMessage) (*empty.Empty, error)
	DeleteMessage(context.Context, *VitessMessage) (*empty.Empty, error)
}

// UnimplementedVitessServiceV1Server can be embedded to have forward compatible implementations.
type UnimplementedVitessServiceV1Server struct {
}

func (*UnimplementedVitessServiceV1Server) GetMessage(ctx context.Context, req *empty.Empty) (*VitessMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessage not implemented")
}
func (*UnimplementedVitessServiceV1Server) CreateMessage(ctx context.Context, req *VitessMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMessage not implemented")
}
func (*UnimplementedVitessServiceV1Server) UpdateMessage(ctx context.Context, req *VitessMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMessage not implemented")
}
func (*UnimplementedVitessServiceV1Server) DeleteMessage(ctx context.Context, req *VitessMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMessage not implemented")
}

func RegisterVitessServiceV1Server(s *grpc.Server, srv VitessServiceV1Server) {
	s.RegisterService(&_VitessServiceV1_serviceDesc, srv)
}

func _VitessServiceV1_GetMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VitessServiceV1Server).GetMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssigmaapi.flnd.v1.VitessServiceV1/GetMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VitessServiceV1Server).GetMessage(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _VitessServiceV1_CreateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VitessMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VitessServiceV1Server).CreateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssigmaapi.flnd.v1.VitessServiceV1/CreateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VitessServiceV1Server).CreateMessage(ctx, req.(*VitessMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _VitessServiceV1_UpdateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VitessMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VitessServiceV1Server).UpdateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssigmaapi.flnd.v1.VitessServiceV1/UpdateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VitessServiceV1Server).UpdateMessage(ctx, req.(*VitessMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _VitessServiceV1_DeleteMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VitessMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VitessServiceV1Server).DeleteMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssigmaapi.flnd.v1.VitessServiceV1/DeleteMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VitessServiceV1Server).DeleteMessage(ctx, req.(*VitessMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _VitessServiceV1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ssigmaapi.flnd.v1.VitessServiceV1",
	HandlerType: (*VitessServiceV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessage",
			Handler:    _VitessServiceV1_GetMessage_Handler,
		},
		{
			MethodName: "CreateMessage",
			Handler:    _VitessServiceV1_CreateMessage_Handler,
		},
		{
			MethodName: "UpdateMessage",
			Handler:    _VitessServiceV1_UpdateMessage_Handler,
		},
		{
			MethodName: "DeleteMessage",
			Handler:    _VitessServiceV1_DeleteMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ssigmaapi/flnd/v1/flnd.proto",
}
